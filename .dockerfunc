#!/bin/bash

# Bash wrappers for docker run commands

export DOCKER_REPO_PREFIX=zachi

# Mount shared memory to the host machine on Linux based instances
#         -v /dev/shm:/dev/shm \
#
# Check shared memory on instance: df -k | grep shm
#
automation() {
  docker run --privileged -t -d --shm-size 8G \
         -e EXEC_CMD="runInParallel -PthreadCount=1 -PconfigFile=./src/dist/config/stg.yml -PfeaturesPath=src/test/resources/features -PfeatureTags=@LogoutFromConsole" \
         -e REPORTS_ROOT_FOLDER="/home/jenkins/automation/reports" \
         -v "${ENVIRONMENT}/automation-reports":"/home/jenkins/automation/reports" \
         -v "${ENVIRONMENT}/automation-gradle-cache:/home/jenkins/.gradle" \
         --name=${DOCKER_REPO_PREFIX}-automation \
         ${DOCKER_REPO_PREFIX}/automation "$@"
}

centos() {
  docker run -t -d \
         --name=${DOCKER_REPO_PREFIX}-centos \
         ${DOCKER_REPO_PREFIX}/centos "$@"
}

alpine() {
  docker run -t -d \
         --name=${DOCKER_REPO_PREFIX}-alpine \
         ${DOCKER_REPO_PREFIX}/alpine "$@"
}

jenkins() {
  docker run -t -d \
         -v "${HOME}/.jenkins:/var/jenkins_home" \
         -p 49001:8080/tcp \
         --restart always \
         --name=${DOCKER_REPO_PREFIX}-jenkins \
         ${DOCKER_REPO_PREFIX}/jenkins "$@"
}

zookeeper() {
  docker run -t -d \
         -v "${HOME}/.zookeeper/data:/opt/zookeeper-3.4.13/data" \
         --network=zk-kafka \
         --hostname=zookeeper \
         -p 2181:2181/tcp \
         --restart always \
         --name=${DOCKER_REPO_PREFIX}-zookeeper \
         ${DOCKER_REPO_PREFIX}/zookeeper "$@"
}

kafka() {
  docker run -t -d \
         -v "${HOME}/.kafka/kafka-logs-kafka:/kafka/kafka-logs-kafka" \
         -v "${HOME}/.kafka/logs:/opt/kafka/logs" \
         --network=zk-kafka \
         --hostname=kafka \
         -p 9092:9092/tcp \
         --name=${DOCKER_REPO_PREFIX}-kafka \
         ${DOCKER_REPO_PREFIX}/kafka "$@"
}

artifactory() {
  docker run -t -d \
         -v "${HOME}/.artifactory:/var/opt/jfrog/artifactory" \
         -p 2000:8081/tcp \
         --restart always \
         --ulimit nofile=32000:40000 \
         --ulimit nproc=65535 \
         --name=${DOCKER_REPO_PREFIX}-artifactory \
         ${DOCKER_REPO_PREFIX}/artifactory "$@"
}